model Client {
  id            String    @id @default(uuid())
  familyNumber  String    @unique
  firstName     String
  lastName      String
  email         String?
  address       String
  aptNumber     String?
  zipCode       String
  phone1        String
  phone2        String?
  
  // Status
  isUnhoused    Boolean   @default(false)
  isTemporary   Boolean   @default(false)
  memberStatus  String    @default("active")
  
  // Family composition
  familySize    Int
  adults        Int
  schoolAged    Int
  smallChildren Int
  
  // Temporary members
  temporaryMembers Json?
  
  // Notes
  foodNotes     String?
  officeNotes   String?
  
  // Tracking
  totalVisits     Int      @default(0)
  totalThisMonth  Int      @default(0)
  lastVisit       DateTime?
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
  
  // Relations
  orders      Order[]
  phoneLogs   PhoneLog[]
  connectedFamilies ConnectedFamily[]
}

model Order {
  id              String    @id @default(uuid())
  client          Client    @relation(fields: [familySearchId], references: [familyNumber])
  familySearchId  String
  status          String
  pickupDate      DateTime?
  notes           String?
  deliveryType    String
  isNewClient     Boolean   @default(false)
  approvalStatus  String
  numberOfBoxes   Int
  
  // Additional people for this visit
  additionalPeople Json
  seasonalItems    String[]
  visitContact     String?
  
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
}

model PhoneLog {
  id              String    @id @default(uuid())
  client          Client    @relation(fields: [familySearchId], references: [familyNumber])
  familySearchId  String
  phoneNumber     String
  callType        String
  callOutcome     String
  notes           String?
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
}

model ConnectedFamily {
  id          String  @id @default(uuid())
  client      Client  @relation(fields: [clientId], references: [id])
  clientId    String
  connectedTo String
}
